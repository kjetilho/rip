#! /bin/sh

dev=epson2:libusb:002:005
dpi=1200
closeness=50

if ! scanimage -n -d $dev
then
    dev=$(scanimage -f "%d%n" | grep -v ^v4l: -m 1)
fi
echo "Using scanner $dev"

get_discid() {
    while [ "$discid" = "" ]
    do
        discid=`cd-discid /dev/cdrom | cut -d" " -f1`
        if [ "$discid" = "" ]
        then
            echo "Looking up CDDB ID failed, retrying in 5 seconds..."
            sleep 5
        fi
    done
}

view() {
    feh -ZFd "$@"
}

discid="$1"

while true
do
    get_discid

    dir=/cmm/tmp/cover/$discid
    mkdir -p $dir
    cd $dir

    HOME=/home/kjetilho
    if [ -r $HOME/.cddb/$discid ]
    then
        album=`grep "^DTITLE=" $HOME/.cddb/$discid | cut -d= -f2-`
        genre=`grep "^DGENRE=" $HOME/.cddb/$discid | cut -d= -f2-`
        if [ -r /mm/samling/meta/$genre/$discid/cover.png -o \
             -r /mm/samling/meta/$genre/$discid/cover.jpg ]
        then
            echo
            echo "=== NOTE: Already scanned cover ==================="
            ls -s1 /mm/samling/meta/$genre/$discid/*.png 2>/dev/null
            ls -s1 /mm/samling/meta/$genre/$discid/*.jpg 2>/dev/null
            echo "==================================================="
            echo
        fi
    else
        album="Unknown album"
    fi
    echo "Currently processing: $album ($genre $discid)"

    while true
    do

        echo ""
        echo "Scanning front cover  -- please choose:"
        echo ""
        echo "  0. Skip"
        echo "  1. CD booklet (12.0 x 12.0)"
        echo "  2. Full CD (14.0 x 12.5)"
        echo "  3. CD paper sleeve (12.5 x 12.5)"
        echo "  or custom (enter dimensions in mm)"
        if [ -r cover.jpg ]
        then
            echo "  v. View it"
            echo ""
            file cover.jpg
        fi
        echo ""
        echo -n "Your choice: [1] ";

        read x y
        case $x in
            0)    x=""; break ;;
            ""|1) x=120; y=120; break ;;
            2)    x=140; y=125; break ;;
            3)    x=125; y=125; break ;;
            [1-9][0-9]*) break ;;
            [vV]) view cover.jpg ;;
            *)    echo Unknown choice ;;
        esac
    done

    [ -n "$x" ] &&
        scanimage --mode color --resolution $dpi -x $x -y $y -d $dev -p |
            pnmcrop -white -closeness $closeness |
            cjpeg -optimize -outfile cover.jpg.tmp &&
        mv cover.jpg.tmp cover.jpg

    while true
    do
        echo ""
        echo "Scanning inside booklet -- please choose:"
        echo "  0. Skip"
        echo "  1. CD booklet (12.0 x 12.0)"
        echo "  2. Full CD (14.0 x 12.5)"
        echo "  or custom (enter dimensions in mm)"
        echo "  or complete booklet (enter 'page 1' etc.)"
        files=$(ls inside.jpg booklet_??.jpg 2>/dev/null)
        if [ "$files" ]
        then
            echo "  v. View it"
            echo ""
            file $files
        fi
        echo ""
        echo -n "Your choice: [0] ";

        read x y
        case $x in
            ""|0)
                x=""; break
                ;;
            1)
                x=120; y=120; break
                ;;
            2)
                x=140; y=125; break
                ;;
            [1-9][0-9]*)
                break
                ;;
            page)
                page=$y; x=120; y=120
                scanimage --mode color --resolution $dpi -x $x -y $y -d $dev -p |
                    pnmcrop -white -closeness $closeness |
                    cjpeg -optimize -outfile inside.jpg.tmp &&
                    mv inside.jpg.tmp booklet_$(printf %02d $page).jpg
                ;;
            [vV])
                case $y in
                    [0-9]*) view booklet_$(printf %02d $y).jpg ;;
                    *)      view $files ;;
                esac
                ;;
            *)
                echo Unknown choice
                ;;
        esac
    done

    [ -n "$x" ] &&
        scanimage --mode color --resolution $dpi -x $x -y $y -d $dev -p |
            pnmcrop -white -closeness $closeness |
            cjpeg -optimize -outfile inside.jpg.tmp &&
        mv inside.jpg.tmp inside.jpg

    while true
    do
        echo ""
        echo "Scanning back cover -- please choose:"
        echo "  0. Skip"
        echo "  1. CD booklet (12.0 x 12.0)"
        echo "  2. Full CD (14.0 x 12.5)"
        echo "  3. CD paper sleeve (12.5 x 12.5)"
        echo "  4. Full CD, reduced resolution"
        echo "  5. Naked inlay (15.0 x 11.5)"
        echo "  or custom (enter dimensions in mm)"
        if [ -r back.jpg ]
        then
            echo "  v. View it"
            echo ""
            file back.jpg
        fi
        echo ""
        echo -n "Your choice: [4] ";

        scale=1.0
        read x y
        case $x in
            0)    x=""; break ;;
            1)    x=120; y=120; break ;;
            2)    x=140; y=125; break ;;
            3)    x=125; y=125; break ;;
            ""|4) x=140; y=125; dpi=300; scale=0.5; break ;;
            5)    x=150; y=115; break ;;
            [1-9][0-9]*) break ;;
            [vV]) view back.jpg ;;
            *)    echo Unknown choice ;;
        esac
    done

    [ -n "$x" ] &&
        scanimage --mode color --resolution $dpi -x $x -y $y -d $dev -p |
            pnmscale $scale |
            pnmcrop -white -closeness $closeness |
            cjpeg -optimize -outfile back.jpg.tmp &&
        mv back.jpg.tmp back.jpg

    echo ""
    ls -1s $dir/*.jpg
    echo ""

    echo -n "View results? [yes] "
    read ans
    case $ans in
        ""|[jJyY]) view *.jpg ;;
    esac

    if [ -r $HOME/.cddb/$discid ]
    then
        echo -n "Install files? [yes] "
        read ans
        case $ans in
            ""|[jJyY])
                mkdir -p /mm/samling/meta/$genre/$discid
                for m in *.jpg; do
                    mv $m /mm/samling/meta/$genre/$discid/
                done
                cd ..
                rmdir $dir
                ;;
        esac
    fi

    echo "Press Return when ready for next task (or enter discid)"
    read discid || break
done
